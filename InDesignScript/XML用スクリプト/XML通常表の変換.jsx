var g_tablestyle="";var g_firstlinestyle=null, g_lastlinestyle = null;main();function main(){	//Make certain that user interaction (display of dialogs, etc.) is turned on.	//app.scriptPreferences.userInteractionLevel = UserInteractionLevels.interactWithAll;	if (app.documents.length != 0){		if(myDisplayDialog() == true){				genXMLTable();		}	} else { 	   alert ("ドキュメントを開いてください");	}}function genXMLTable(){	var myDocument = app.activeDocument;	var body = myDocument.xmlElements[0];	//bodyを探す	do{		if(body.markupTag.name == 'body') break;		if(body == null) {			alert ("bodyが見つかりません");			return;		}		body = body.xmlElements[0];	}while(body != null);	//body下の要素を順にたどる	genXMLTableSub(body.xmlElements);	alert ("コンバート完了");}function genXMLTableSub(elemlist){	var myDocument = app.activeDocument;	for(var i=0; i<elemlist.length; i++){		var elem = elemlist[i];		if(elem.markupTag.name == 'table'){			//$.write('table found');			//すでに表が作成されているときは処理しない			if(elem.tables.length > 0){				//$.write('skip!');				continue;			}			var table = elem.convertElementToTable(				myDocument.xmlTags.itemByName("tr"),				myDocument.xmlTags.itemByName("td")			);			//table.clearTableStyleOverrides();			table.appliedTableStyle = g_tablestyle;			//$.write('convert table');			//ヘッダ・フッタへのスタイルを先頭・末尾行に適用			var rows = table.rows;			if(g_firstlinestyle != null){				for(var j=0; j < rows[0].cells.length; j++){					rows[0].cells[j].appliedCellStyle = g_firstlinestyle;				}			}			if(g_lastlinestyle != null){				for(var j=0; j < rows[rows.length-1].cells.length; j++){					rows[rows.length-1].cells[j].appliedCellStyle = g_lastlinestyle;				}			}		} else {			if(elem.xmlElements.length > 0){				genXMLTableSub(elem.xmlElements);			}		}	}}function myDisplayDialog(){	//文字スタイルの一覧を取得	var myDocument = app.activeDocument;	var tablestyles = [];	for(var i=0; i<myDocument.tableStyles.length; i++){		tablestyles.push(myDocument.tableStyles.item(i).name);	}		//ダイアログ生成	var myDialog = app.dialogs.add({name:"genTable"});	with(myDialog.dialogColumns.add()){		//説明ラベル		staticTexts.add({staticLabel:"tableタグを表にコンバートします"});		staticTexts.add({staticLabel:"変換後に適用する表スタイルを選択してください"});		//パネルを追加		with(borderPanels.add()){			with(dialogColumns.add()){				var listboxTableStyle = dropdowns.add					({stringList: tablestyles});			}		}	}		myReturn = myDialog.show();	if (myReturn == true){		g_tablestyle = tablestyles[listboxTableStyle.selectedIndex];		//ヘッダスタイルとフッタスタイルを取得		var style =  myDocument.tableStyles.itemByName(g_tablestyle);		g_firstlinestyle = style.headerRegionCellStyle;		g_lastlinestyle = style.footerRegionCellStyle;		myDialog.destroy();		return true;	} else {		myDialog.destroy();		return false;	}		}